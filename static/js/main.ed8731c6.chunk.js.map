{"version":3,"sources":["components/LoginForm/index.js","components/ProjectHeader/index.js","components/Home/index.js","components/JobItemCard/index.js","components/ProfileDetails/index.js","components/Jobs/index.js","components/ProtectedRoute/index.js","components/RegisterForm/index.js","components/NotFound/index.js","components/SimilarJobsCard/index.js","components/JobItemDetails/index.js","App.js","index.js"],"names":["LoginForm","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","username","password","errorMsg","onLoginsuccess","jwtToken","Cookies","set","expires","path","secure","sameSite","console","log","props","history","replace","onSubmitform","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_this$state","userDetails","options","response","data","wrap","_context","prev","next","preventDefault","method","headers","body","JSON","stringify","fetch","sent","json","ok","error_msg","setState","message","stop","_x","apply","onChangeUsername","target","value","onChangepassword","_inherits","_createClass","key","_this$state2","this","undefined","get","_jsx","Redirect","to","className","children","_jsxs","src","alt","onSubmit","htmlFor","id","type","onChange","placeholder","Link","Component","withRouter","onClick","remove","Home","_Fragment","ProjectHeaader","push","JobItemCard","itemDetails","companyLogoUrl","employmentType","jobDescription","location","packagePerAnnum","rating","title","BsFillStarFill","AiFillEnvironment","BsBriefcaseFill","apiStatusList","ProfileDetails","profilestatus","getProfileDetails","updatedData","Authorization","credentials","updateddatafunc","profileDetails","profile","name","profileImageUrl","profile_image_url","description","renderprofilecard","retryFetchProfile","renderprofileFailure","renderloader","Loader","color","height","width","employmentTypesList","label","employmentTypeId","salaryRangesList","salaryRangeId","Jobs","typeOfemplList","salaryoption","searchInput","jobsList","jobstatus","convertData","eachItem","company_logo_url","employment_type","job_description","package_per_annum","shortBio","getJobsDetails","jobsController","liststr","url","AbortController","join","signal","map","t0","_callee2","profileController","_context2","profile_details","profilecard","_ref3","renderjobsList","each","renderFetchStatus","renderFailureView","retryFetch","onChangeSearchInput","employType","includes","prevState","filter","eachitem","_toConsumableArray","salaryOptions","handleKeyPress","e","searchStart","abort","ProjectHeader","onKeyDown","BsSearch","ProtectedRoute","accessToken","Route","_objectSpread","RegisterForm","confirmPassword","isRegistered","onRegistersuccess","onSubmitForm","abrupt","onChangeDescription","onChangePassword","onChangeConfirmPassword","required","rows","cols","NotFound","SimilarJobsCard","jobdetails","JobItemDetails","wholejobDetails","loadingstatus","skillsConvertion","eachskill","imageUrl","image_url","dataConversion","job","companyWebsiteUrl","company_website_url","skills","lifeAtCompany","life_at_company","dataCoversionOfSimilarJobs","companyWebsite","getitemDetails","match","params","jobDetails","job_details","similarJobs","similar_jobs","renderApiStatus","renderJobDetails","href","App","Switch","exact","component","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.ed8731c6.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\nimport {Redirect, Link} from 'react-router-dom'\nimport {Component} from 'react'\n\nimport './index.css'\n\nclass LoginForm extends Component {\n  state = {username: '', password: '', errorMsg: ''}\n\n  onLoginsuccess = jwtToken => {\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n      path: '/',\n      secure: false,\n      sameSite: 'Strict',\n    })\n    console.log('set cookies')\n    const {history} = this.props\n    history.replace('/')\n  }\n\n  onSubmitform = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://my-jobby-website.onrender.com/api/auth/login'\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json', // Add this header\n      },\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    console.log('responsedata:', data)\n    if (response.ok) {\n      console.log('goint to onLoginsuccess')\n      this.onLoginsuccess(data)\n    } else {\n      console.log(data.error_msg)\n      this.setState({errorMsg: data.message})\n    }\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangepassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  render() {\n    const {username, password, errorMsg} = this.state\n\n    const accessToken = Cookies.get('jwt_token')\n    if (accessToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n\n    return (\n      <div className=\"back\">\n        <div className=\"login-container\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"website-logo\"\n          />\n          <form className=\"form-container\" onSubmit={this.onSubmitform}>\n            <label htmlFor=\"username\" className=\"inputel-label\">\n              USERNAME\n            </label>\n            <input\n              className=\"inputel\"\n              id=\"username\"\n              type=\"text\"\n              onChange={this.onChangeUsername}\n              value={username}\n              placeholder=\"Username\"\n            />\n            <label htmlFor=\"password\" className=\"inputel-label\">\n              PASSWORD\n            </label>\n            <input\n              className=\"inputel\"\n              type=\"password\"\n              id=\"password\"\n              onChange={this.onChangepassword}\n              value={password}\n              placeholder=\"Password\"\n            />\n            <button className=\"submit-btn\" type=\"submit\">\n              Login\n            </button>\n            <p>\n              Do not have account ? <Link to=\"/register\">Register</Link>\n            </p>\n          </form>\n          {errorMsg && <p className=\"errmsg\">{errorMsg}</p>}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LoginForm\n","import Cookies from 'js-cookie'\n\nimport {Link, withRouter} from 'react-router-dom'\n\nimport './index.css'\n\nconst ProjectHeader = props => {\n  const onClicklogout = () => {\n    const {history} = props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n  }\n\n  return (\n    <div className=\"navbar\">\n      <ul className=\"navbar-list\">\n        <li className=\"list-item\">\n          <Link to=\"/\">\n            <img\n              src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n              alt=\"website logo\"\n              className=\"nav-logo\"\n            />\n          </Link>\n        </li>\n        <li className=\"list-item\">\n          <ul className=\"options-container\">\n            <li className=\"list-item\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li className=\"list-item\">\n              <Link to=\"/jobs\">Jobs</Link>\n            </li>\n          </ul>\n        </li>\n        <li className=\"list-item\">\n          <button className=\"logout-btn\" type=\"button\" onClick={onClicklogout}>\n            Logout\n          </button>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default withRouter(ProjectHeader)\n","import {Link} from 'react-router-dom'\nimport ProjectHeaader from '../ProjectHeader'\nimport './index.css'\n\nconst Home = props => {\n  const onClickjobs = () => {\n    const {history} = props\n    history.push('/jobs')\n  }\n\n  return (\n    <>\n      <ProjectHeaader />\n      <div className=\"home-bg-container\">\n        <div className=\"text-container\">\n          <h1 className=\"home-heading\">Find The Job That Fits Your Life</h1>\n          <p className=\"description\">\n            Millions of people are searching for jobs,salary information,company\n            reviews.Find the job that fits your abilities and potential\n          </p>\n          <button className=\"findJobs-btn\" type=\"button\" onClick={onClickjobs}>\n            <Link to=\"/jobs\">Find Jobs</Link>\n          </button>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","import {BsFillStarFill, BsBriefcaseFill} from 'react-icons/bs'\nimport {AiFillEnvironment} from 'react-icons/ai'\nimport {Link} from 'react-router-dom'\nimport './index.css'\n\nconst JobItemCard = props => {\n  const {itemDetails} = props\n\n  const {\n    companyLogoUrl,\n    employmentType,\n    id,\n    jobDescription,\n    location,\n    packagePerAnnum,\n    rating,\n    title,\n  } = itemDetails\n\n  return (\n    <li className=\"job-item\">\n      <Link to={`/jobs/${id}`}>\n        <div className=\"cardbg-container\">\n          <div className=\"name-logo-container\">\n            <img className=\"applogo\" alt=\"company logo\" src={companyLogoUrl} />\n            <div className=\"name-container\">\n              <h1 className=\"company-name\">{title}</h1>\n              <div className=\"rating-container\">\n                <BsFillStarFill className=\"star-icon\" />\n                <p className=\"rating\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"extra-options-container\">\n            <div className=\"location-and-type-container\">\n              <AiFillEnvironment className=\"location-icon\" />\n              <p className=\"location\">{location}</p>\n              <BsBriefcaseFill className=\"case-icon\" />\n              <p className=\"type\">{employmentType}</p>\n            </div>\n            <p className=\"salary\">{packagePerAnnum}</p>\n          </div>\n          <hr className=\"hrline\" />\n          <h1 className=\"description-heading\">Description</h1>\n          <p className=\"description\">{jobDescription}</p>\n        </div>\n      </Link>\n    </li>\n  )\n}\n\nexport default JobItemCard\n","import Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport {Component} from 'react'\nimport './index.css'\n\nconst apiStatusList = {\n  initial: 'INITIAL',\n  loading: 'LOADING',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass ProfileDetails extends Component {\n  state = {profilestatus: apiStatusList.initial}\n\n  componentDidMount() {\n    this.getProfileDetails()\n  }\n\n  getProfileDetails = async () => {\n    this.setState({profilestatus: apiStatusList.loading})\n\n    const jwtToken = Cookies.get('jwt_token')\n    console.log('JWT Token front:', jwtToken)\n    const url = 'https://my-jobby-website.onrender.com/api/auth/profile'\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      credentials: 'include',\n    }\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n      console.log(data)\n      const updatedData = this.updateddatafunc(data)\n\n      this.setState({\n        profileDetails: updatedData,\n        profilestatus: apiStatusList.success,\n      })\n    } else {\n      this.setState({profilestatus: apiStatusList.failure})\n    }\n  }\n\n  updateddatafunc = profile => ({\n    name: profile.name,\n    profileImageUrl: profile.profile_image_url,\n    description: profile.description,\n  })\n\n  renderprofilecard = () => {\n    const {profileDetails} = this.state\n    const {name, description, profileImageUrl} = profileDetails\n    console.log('profileImageUrl:', profileImageUrl)\n    console.log('name:', name)\n    return (\n      <div className=\"profile-bg\">\n        <img src={profileImageUrl} alt=\"profile\" className=\"profile-image\" />\n        <h1 className=\"profile-name\">{name}</h1>\n        <p className=\"profile-description\">{description}</p>\n      </div>\n    )\n  }\n\n  retryFetchProfile = () => {\n    this.getProfileDetails()\n  }\n\n  renderprofileFailure = () => (\n    <button className=\"retrybtn\" type=\"button\" onClick={this.retryFetchProfile}>\n      Retry\n    </button>\n  )\n\n  renderloader = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  profilestatus = () => {\n    const {profilestatus} = this.state\n    switch (profilestatus) {\n      case apiStatusList.failure:\n        return this.renderprofileFailure()\n      case apiStatusList.success:\n        return this.renderprofilecard()\n      case apiStatusList.loading:\n        return this.renderloader()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return this.profilestatus()\n  }\n}\n\nexport default ProfileDetails\n","import Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport {BsSearch} from 'react-icons/bs'\nimport {Component} from 'react'\nimport ProjectHeader from '../ProjectHeader'\nimport JobItemCard from '../JobItemCard'\nimport ProfileDetails from '../ProfileDetails'\n\nimport './index.css'\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULL TIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PART TIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nconst apiStatusList = {\n  initial: 'INITIAL',\n  loading: 'LOADING',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass Jobs extends Component {\n  state = {\n    typeOfemplList: [],\n    salaryoption: '0',\n    searchInput: '',\n    jobsList: [],\n    jobstatus: apiStatusList.initial,\n    profilestatus: apiStatusList.initial,\n    profileDetails: null,\n  }\n\n  componentDidMount() {\n    this.getJobsDetails()\n    this.getProfileDetails()\n  }\n\n  componentWillUnmount() {\n    if (this.jobsController) {\n      this.jobsController.abort()\n    }\n    if (this.profileController) {\n      this.profileController.abort()\n    }\n  }\n\n  convertData = eachItem => ({\n    companyLogoUrl: eachItem.company_logo_url,\n    employmentType: eachItem.employment_type,\n    id: eachItem.id,\n    jobDescription: eachItem.job_description,\n    location: eachItem.location,\n    packagePerAnnum: eachItem.package_per_annum,\n    rating: eachItem.rating,\n    title: eachItem.title,\n  })\n\n  updateddatafunc = profile => ({\n    name: profile.name,\n    profileImageUrl: profile.profile_image_url,\n    shortBio: profile.description,\n  })\n\n  getJobsDetails = async () => {\n    const jobsController = new AbortController()\n    this.jobsController = jobsController\n\n    this.setState({jobstatus: apiStatusList.loading})\n\n    const jwtToken = Cookies.get('jwt_token')\n    const {salaryoption, typeOfemplList, searchInput} = this.state\n    const liststr = typeOfemplList.join(',')\n    console.log(salaryoption, typeOfemplList, searchInput)\n    const url = `https://my-jobby-website.onrender.com/api/auth/jobs?employment_type=${liststr}&minimum_package=${salaryoption}&search=${searchInput}`\n\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      signal: jobsController.signal,\n    }\n\n    try {\n      const response = await fetch(url, options)\n      if (response.ok) {\n        const data = await response.json()\n        const updatedData = data.map(this.convertData)\n        this.setState({jobsList: updatedData, jobstatus: apiStatusList.success})\n      } else {\n        this.setState({jobstatus: apiStatusList.failure})\n      }\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        console.log('Jobs fetch aborted')\n      } else {\n        this.setState({jobstatus: apiStatusList.failure})\n      }\n    }\n  }\n\n  getProfileDetails = async () => {\n    const profileController = new AbortController()\n    this.profileController = profileController\n\n    this.setState({profilestatus: apiStatusList.loading})\n\n    const jwtToken = Cookies.get('jwt_token')\n    const url = 'https://my-jobby-website.onrender.com/api/auth/profile'\n\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      signal: profileController.signal,\n      credentials: true,\n    }\n\n    try {\n      const response = await fetch(url, options)\n      if (response.ok) {\n        const data = await response.json()\n        const updatedData = this.updateddatafunc(data.profile_details)\n        this.setState({\n          profileDetails: updatedData,\n          profilestatus: apiStatusList.success,\n        })\n      } else {\n        this.setState({profilestatus: apiStatusList.failure})\n      }\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        console.log('Profile fetch aborted')\n      } else {\n        this.setState({profilestatus: apiStatusList.failure})\n      }\n    }\n  }\n\n  profilestatus = () => {\n    const {profilestatus} = this.state\n    switch (profilestatus) {\n      case apiStatusList.failure:\n        return this.renderprofileFailure()\n      case apiStatusList.success:\n        return this.profilecard()\n      case apiStatusList.loading:\n        return this.renderloader()\n      default:\n        return null\n    }\n  }\n\n  profilecard = () => {\n    const {profileDetails} = this.state\n    if (!profileDetails) return null\n    console.log('in profilecard', profileDetails)\n    const {name, shortBio} = profileDetails || {}\n    return (\n      <div className=\"profile-bg\">\n        <img\n          src={profileDetails.profileImageUrl}\n          alt=\"profile\"\n          className=\"profile-image\"\n        />\n        <h1 className=\"profile-name\">{name}</h1>\n        <p className=\"profile-description\">{shortBio}</p>\n      </div>\n    )\n  }\n\n  renderjobsList = () => {\n    const {jobsList} = this.state\n    if (jobsList.length === 0) {\n      return (\n        <div className=\"noJobs-container\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n            alt=\"no jobs\"\n            className=\"noproducts-pic\"\n          />\n          <h1 className=\"noJobs-heading\">No jobs Found</h1>\n          <p className=\"noJobs-text\">\n            We could not find any jobs. Try other filters.\n          </p>\n        </div>\n      )\n    }\n    return (\n      <ul className=\"jobslist\">\n        {jobsList.map(each => (\n          <JobItemCard itemDetails={each} key={each.id} />\n        ))}\n      </ul>\n    )\n  }\n\n  renderFetchStatus = () => {\n    const {jobstatus} = this.state\n    switch (jobstatus) {\n      case apiStatusList.loading:\n        return this.renderloader()\n      case apiStatusList.failure:\n        return this.renderFailureView()\n      case apiStatusList.success:\n        return this.renderjobsList()\n      default:\n        return null\n    }\n  }\n\n  retryFetch = () => {\n    this.getJobsDetails()\n  }\n\n  renderFailureView = () => (\n    <div className=\"failureview-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"failure-image\"\n      />\n      <h1 className=\"failure-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-para\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button className=\"retrybtn\" type=\"button\" onClick={this.retryFetch}>\n        Retry\n      </button>\n    </div>\n  )\n\n  renderloader = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#4f46e5\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  onChangeSearchInput = event => {\n    this.setState({searchInput: event.target.value})\n  }\n\n  employType = () => (\n    <>\n      <h1 className=\"Type-of-Employment\">Type of Employment</h1>\n      <ul className=\"type-list\">\n        {employmentTypesList.map(each => {\n          const onChangeemploymentType = () => {\n            const {typeOfemplList} = this.state\n            console.log(typeOfemplList)\n            if (!typeOfemplList.includes(each.employmentTypeId)) {\n              this.setState(\n                prevState => ({\n                  typeOfemplList: [\n                    ...prevState.typeOfemplList,\n                    each.employmentTypeId,\n                  ],\n                }),\n                this.getJobsDetails,\n              )\n            } else {\n              this.setState(\n                prevState => ({\n                  typeOfemplList: prevState.typeOfemplList.filter(\n                    eachitem => eachitem !== each.employmentTypeId,\n                  ),\n                }),\n                this.getJobsDetails,\n              )\n            }\n          }\n          return (\n            <div className=\"option-container\">\n              <input\n                className=\"checkbox\"\n                name=\"employmentType\"\n                type=\"checkbox\"\n                id={each.employmentTypeId}\n                key={each.employmentTypeId}\n                onChange={onChangeemploymentType}\n              />\n              <label className=\"sorting-label\" htmlFor={each.employmentTypeId}>\n                {each.label}\n              </label>\n            </div>\n          )\n        })}\n      </ul>\n    </>\n  )\n\n  salaryOptions = () => (\n    <div className=\"salaryoptions-container\">\n      <h1 className=\"salaryrange-heading\">Salary Range</h1>\n      <ul className=\"salayranges-list\">\n        {salaryRangesList.map(each => {\n          const onChangevalue = () => {\n            this.setState(\n              {salaryoption: each.salaryRangeId},\n              this.getJobsDetails,\n            )\n          }\n          return (\n            <div className=\"option-container\">\n              <input\n                className=\"radio\"\n                name=\"salaryrange\"\n                type=\"radio\"\n                id={each.salaryRangeId}\n                onChange={onChangevalue}\n                key={each.salaryRangeId}\n              />\n              <label className=\"sorting-label\" htmlFor={each.salaryRangeId}>\n                {each.label}\n              </label>\n            </div>\n          )\n        })}\n      </ul>\n    </div>\n  )\n\n  handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      this.getJobsDetails()\n    }\n  }\n\n  searchStart = () => {\n    this.getJobsDetails()\n  }\n\n  render() {\n    return (\n      <>\n        <ProjectHeader />\n        <div className=\"jobs-bg-container\">\n          <div className=\"sideContainer\">\n            <ProfileDetails />\n            <hr className=\"hrline\" />\n            {this.employType()}\n            <hr className=\"hrline\" />\n            {this.salaryOptions()}\n          </div>\n          <div className=\"right-side-container\">\n            <div className=\"input-container\">\n              <input\n                className=\"inputel\"\n                placeholder=\"Search\"\n                type=\"search\"\n                onChange={this.onChangeSearchInput}\n                onKeyDown={this.handleKeyPress}\n              />\n              <button\n                type=\"button\"\n                data-testid=\"searchButton\"\n                className=\"search-button\"\n                onClick={this.searchStart}\n              >\n                <BsSearch className=\"search-icon\" />\n              </button>\n            </div>\n            {this.renderFetchStatus()}\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Jobs\n","import Cookies from 'js-cookie'\nimport {Route, Redirect} from 'react-router-dom'\n\nconst ProtectedRoute = props => {\n  const accessToken = Cookies.get('jwt_token')\n  console.log('protected route:', accessToken)\n  if (accessToken === undefined) {\n    console.log('going to login page')\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect, Link} from 'react-router-dom'\nimport './index.css'\n\nclass RegisterForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    confirmPassword: '',\n    errorMsg: '',\n    isRegistered: false,\n    description: '',\n  }\n\n  onRegistersuccess = jwtToken => {\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n      path: '/',\n      secure: false,\n      sameSite: 'Strict',\n    })\n    console.log('set cookies')\n    const {history} = this.props\n    history.replace('/')\n  }\n\n  onSubmitForm = async event => {\n    event.preventDefault()\n    const {username, password, confirmPassword, description} = this.state\n\n    if (password !== confirmPassword) {\n      this.setState({errorMsg: \"Passwords don't match\"})\n      return\n    }\n\n    const userDetails = {username, password, description}\n    const url = 'https://my-jobby-website.onrender.com/api/auth/register'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const response = await fetch(url, options)\n    const data = await response.json()\n\n    if (response.ok) {\n      this.setState({isRegistered: true})\n      this.onRegistersuccess()\n    } else {\n      this.setState({errorMsg: data.message})\n    }\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangeDescription = event => {\n    this.setState({description: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onChangeConfirmPassword = event => {\n    this.setState({confirmPassword: event.target.value})\n  }\n\n  render() {\n    const {\n      username,\n      password,\n      confirmPassword,\n      errorMsg,\n      isRegistered,\n      description,\n    } = this.state\n\n    if (isRegistered) {\n      return <Redirect to=\"/login\" />\n    }\n\n    return (\n      <div className=\"back\">\n        <div className=\"login-container\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"website-logo\"\n          />\n          <form className=\"form-container\" onSubmit={this.onSubmitForm}>\n            {/* <h1 className=\"form-heading\">Register</h1> */}\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              required\n              onChange={this.onChangeUsername}\n              className=\"inputel\"\n            />\n            <label htmlFor=\"description\">Descripion</label>\n            <textarea\n              id=\"shortdescription\"\n              value={description}\n              onChange={this.onChangeDescription}\n              className=\"inputel\"\n              placeholder=\"Write a short description about yourself (max 50 characters)...\"\n              rows=\"4\"\n              cols=\"50\"\n            />\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              required\n              onChange={this.onChangePassword}\n              className=\"inputel\"\n            />\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              value={confirmPassword}\n              required\n              onChange={this.onChangeConfirmPassword}\n              className=\"inputel\"\n            />\n            {errorMsg && <p className=\"error-message\">*{errorMsg}</p>}\n            <button type=\"submit\" className=\"submit-btn\">\n              Register\n            </button>\n            <p>\n              Already registered ? <Link to=\"/login\">Login</Link>\n            </p>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default RegisterForm\n","import './index.css'\nimport ProjectHeader from '../ProjectHeader'\n\nconst NotFound = () => (\n  <>\n    <ProjectHeader />\n    <div className=\"notfound-bg\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png\"\n        alt=\"not found\"\n        className=\"notfound-image\"\n      />\n      <h1 className=\"heading\">Page Not Found</h1>\n      <p className=\"notfound-text\">\n        we’re sorry, the page you requested could not be found\n      </p>\n    </div>\n  </>\n)\n\nexport default NotFound\n","import {BsFillStarFill} from 'react-icons/bs'\nimport './index.css'\n\nconst SimilarJobsCard = props => {\n  const {jobdetails} = props\n  const {\n    companyLogoUrl,\n    jobDescription,\n    rating,\n    title,\n    location,\n    employmentType,\n  } = jobdetails\n\n  return (\n    <div className=\"card-bg-container \">\n      <div className=\"name-logo-container\">\n        <img className=\"app-logo\" alt=\"company logo\" src={companyLogoUrl} />\n        <div className=\"name-container\">\n          <h1 className=\"company-name\">{title}</h1>\n          <div className=\"rating-container\">\n            <BsFillStarFill className=\"star-icon\" />\n            <p className=\"rating\">{rating}</p>\n            <p className=\"rating\">{location}</p>\n            <p className=\"rating\">{employmentType}</p>\n          </div>\n        </div>\n      </div>\n      <h1 className=\"description-heading\">Description</h1>\n      <p className=\"description\">{jobDescription}</p>\n    </div>\n  )\n}\n\nexport default SimilarJobsCard\n","import {BsFillStarFill, BsBriefcaseFill} from 'react-icons/bs'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport {Component} from 'react'\nimport ProjectHeader from '../ProjectHeader'\nimport SimilarJobsCard from '../SimilarJobsCard'\n\nimport './index.css'\n\nconst apiStatusList = {\n  initial: 'INITIAL',\n  failure: 'FAILURE',\n  success: 'SUCCESS',\n  loading: 'LOADING',\n}\n\nclass JobItemDetails extends Component {\n  state = {wholejobDetails: {}, loadingstatus: apiStatusList.initial}\n\n  componentDidMount() {\n    this.getitemDetails()\n  }\n\n  skillsConvertion = eachskill => ({\n    imageUrl: eachskill.image_url,\n    name: eachskill.name,\n  })\n\n  dataConversion = job => ({\n    companyLogoUrl: job.company_logo_url,\n    companyWebsiteUrl: job.company_website_url,\n    employmentType: job.employment_type,\n    id: job.id,\n    title: job.title,\n    jobDescription: job.job_description,\n    skills: job.skills.map(each => this.skillsConvertion(each)),\n    lifeAtCompany: {\n      description: job.life_at_company.description,\n      imageUrl: job.life_at_company.image_url,\n    },\n    location: job.location,\n    packagePerAnnum: job.package_per_annum,\n    rating: job.rating,\n  })\n\n  dataCoversionOfSimilarJobs = job => ({\n    companyLogoUrl: job.company_logo_url,\n    companyWebsite: job.company_website_url,\n    employmentType: job.employment_type,\n    id: job.id,\n    jobDescription: job.job_description,\n    location: job.location,\n    packagePerAnnum: job.package_per_annum,\n    rating: job.rating,\n    title: job.title,\n  })\n\n  getitemDetails = async () => {\n    this.setState({loadingstatus: apiStatusList.loading})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    const jwtToken = Cookies.get('jwt_token')\n    const url = `https://my-jobby-website.onrender.com/api/auth/jobs/${id}`\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    console.log('in jobitemdetails:', data)\n    if (response.ok) {\n      const updatedData = {\n        jobDetails: this.dataConversion(data.job_details),\n        similarJobs: data.similar_jobs.map(each =>\n          this.dataCoversionOfSimilarJobs(each),\n        ),\n      }\n      this.setState({\n        wholejobDetails: updatedData,\n        loadingstatus: apiStatusList.success,\n      })\n    } else {\n      this.setState({loadingstatus: apiStatusList.failure})\n    }\n  }\n\n  renderApiStatus = () => {\n    const {loadingstatus} = this.state\n    switch (loadingstatus) {\n      case apiStatusList.loading:\n        return this.renderloader()\n      case apiStatusList.success:\n        return this.renderJobDetails()\n      case apiStatusList.failure:\n        return this.renderFailureView()\n      default:\n        return null\n    }\n  }\n\n  retryFetch = () => {\n    this.getitemDetails()\n  }\n\n  renderFailureView = () => (\n    <div className=\"failureview-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"failure-image\"\n      />\n      <h1 className=\"failure-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-para\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button className=\"retrybtn\" type=\"button\" onClick={this.retryFetch}>\n        Retry\n      </button>\n    </div>\n  )\n\n  renderloader = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#6366f1\" height=\"80\" width=\"80\" />\n    </div>\n  )\n\n  renderJobDetails = () => {\n    const {wholejobDetails} = this.state\n    const {jobDetails, similarJobs} = wholejobDetails\n    const {\n      companyLogoUrl,\n      companyWebsiteUrl,\n      rating,\n      title,\n      location,\n      employmentType,\n      packagePerAnnum,\n      jobDescription,\n    } = jobDetails\n\n    return (\n      <div className=\"job-item-details\">\n        <div className=\"jobDetails-container\">\n          <div className=\"name-logo-container\">\n            <img\n              className=\"app-logo\"\n              alt=\"job details company logo\"\n              src={companyLogoUrl}\n            />\n            <div className=\"name-container\">\n              <h1 className=\"company-name\">{title}</h1>\n              <div className=\"rating-container\">\n                <BsFillStarFill className=\"star-icon\" />\n                <p className=\"rating\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <hr className=\"hrline\" />\n          <div className=\"extra-options-container\">\n            <div className=\"location-and-type-container\">\n              {/* <IoLocationSharp className=\"location-icon\" /> */}\n              <p className=\"location\">{location}</p>\n              <BsBriefcaseFill className=\"case-icon\" />\n              <p className=\"type\">{employmentType}</p>\n            </div>\n            <p className=\"salary\">{packagePerAnnum}</p>\n          </div>\n          <hr className=\"hrline\" />\n          <div className=\"description-and-visit-container\">\n            <h1 className=\"job-details-description-heading\">Description</h1>\n            <a href={companyWebsiteUrl} className=\"visit-url\">\n              Visit\n            </a>\n          </div>\n          <p className=\"job-details-description\">{jobDescription}</p>\n          <h1 className=\"skills-heading\">Skills</h1>\n          <ul className=\"skills-container\">\n            {jobDetails.skills.map(each => (\n              <div className=\"each-skill\">\n                <img\n                  src={each.imageUrl}\n                  alt=\"each.name\"\n                  className=\"skill-icon\"\n                  key={each.id}\n                />\n                <p className=\"skill-name\">{each.name}</p>\n              </div>\n            ))}\n          </ul>\n          <h1 className=\"life-at-company-heading\">Life at Company</h1>\n          <div className=\"life-at-company-description\">\n            <p className=\"description\">\n              {jobDetails.lifeAtCompany.description}\n            </p>\n            <img\n              src={jobDetails.lifeAtCompany.imageUrl}\n              alt=\"life at company\"\n              className=\"company-image\"\n            />\n          </div>\n        </div>\n        <hr className=\"hrline\" />\n        <h1 className=\"similar-jobs-heading\">Similar Jobs</h1>\n        <ul className=\"similar-jobs-list\">\n          {similarJobs.map(each => (\n            <SimilarJobsCard jobdetails={each} key={each.id} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <ProjectHeader />\n        {this.renderApiStatus()}\n      </div>\n    )\n  }\n}\n\nexport default JobItemDetails\n","import {Route, Switch} from 'react-router-dom'\nimport LoginForm from './components/LoginForm'\nimport Home from './components/Home'\nimport Jobs from './components/Jobs'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport RegisterForm from './components/RegisterForm'\nimport NotFound from './components/NotFound'\nimport './App.css'\nimport JobItemDetails from './components/JobItemDetails'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/register\" component={RegisterForm} />\n    <Route exact path=\"/login\" component={LoginForm} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\n    <ProtectedRoute path=\"/jobs/:id\" component={JobItemDetails} />\n    <NotFound />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}